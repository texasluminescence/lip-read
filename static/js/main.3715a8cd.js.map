{"version":3,"file":"static/js/main.3715a8cd.js","mappings":"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","sources":["src/services/web-file-picker.ts","src/services/platform-media.ts","src/screens/HomeScreen.tsx","src/components/CameraView.tsx","src/components/WebCameraView.tsx","src/components/PlatformCameraView.tsx","src/screens/RecordScreen.tsx","src/components/VideoPlayer.tsx","src/components/WebVideoPlayer.tsx","src/components/PlatformVideoPlayer.tsx","src/services/api.ts","src/screens/PreviewScreen.tsx","App.tsx","index.ts","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["// Helper function to pick files on web platform\nexport const pickVideoFromLibrary = (): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = 'video/*';\n    \n    input.onchange = (event) => {\n      const target = event.target as HTMLInputElement;\n      const files = target.files;\n      \n      if (files && files.length > 0) {\n        const url = URL.createObjectURL(files[0]);\n        resolve(url);\n      } else {\n        reject(new Error('No file selected'));\n      }\n    };\n    \n    input.click();\n  });\n};","import { Platform } from 'react-native';\nimport * as MediaLibrary from 'expo-media-library';\nimport * as DocumentPicker from 'expo-document-picker';\nimport { pickVideoFromLibrary } from './web-file-picker';\n\n// Check media library permissions on native platforms\nexport const checkMediaLibraryPermissions = async (): Promise<boolean> => {\n  if (Platform.OS === 'web') {\n    return true; // Web doesn't need permissions for file picker\n  }\n  \n  const { status } = await MediaLibrary.requestPermissionsAsync();\n  return status === 'granted';\n};\n\n// Get videos from media library\nexport const getVideosFromLibrary = async () => {\n  if (Platform.OS === 'web') {\n    // Web platforms don't have a media library API, so we return an empty array\n    // The web implementation will use a file picker instead\n    return { assets: [] };\n  }\n  \n  console.log('Checking media library permissions...');\n  \n  // First check if we have permissions with full detail\n  const permissionInfo = await MediaLibrary.getPermissionsAsync();\n  console.log('Current permission status:', JSON.stringify(permissionInfo));\n  \n  if (permissionInfo.status !== 'granted') {\n    console.log('Requesting media library permissions...');\n    const newPermissionInfo = await MediaLibrary.requestPermissionsAsync();\n    console.log('New permission status:', JSON.stringify(newPermissionInfo));\n    \n    if (newPermissionInfo.status !== 'granted') {\n      console.log('Media library permission was denied');\n      return { assets: [] };\n    }\n  }\n  \n  try {\n    console.log('Getting videos from media library...');\n    \n    // Get all video assets from the media library\n    const results = await MediaLibrary.getAssetsAsync({\n      mediaType: MediaLibrary.MediaType.video,\n      sortBy: [MediaLibrary.SortBy.creationTime],\n      first: 100, // Increased to 100 videos\n    });\n\n    console.log(`Found ${results.assets.length} videos in library`);\n    \n    if (results.assets.length === 0) {\n      console.log('No videos found in library, trying with broader criteria...');\n      \n      // Try with a broader query as fallback\n      const allMediaResults = await MediaLibrary.getAssetsAsync({\n        first: 100,\n      });\n      \n      // Filter for video types based on extension\n      const potentialVideos = allMediaResults.assets.filter(asset => {\n        const filename = asset.filename.toLowerCase();\n        return filename.endsWith('.mp4') || \n               filename.endsWith('.mov') || \n               filename.endsWith('.3gp') ||\n               filename.endsWith('.avi') ||\n               filename.endsWith('.mkv');\n      });\n      \n      console.log(`Found ${potentialVideos.length} potential videos by extension filtering`);\n      \n      if (potentialVideos.length > 0) {\n        return { assets: potentialVideos };\n      }\n    }\n    \n    return results;\n  } catch (error) {\n    console.error('Error loading videos from media library:', error);\n    return { assets: [] };\n  }\n};\n\n// Select a video file from device using document picker\nexport const selectVideoFromLibrary = async (): Promise<string | null> => {\n  if (Platform.OS === 'web') {\n    try {\n      return await pickVideoFromLibrary();\n    } catch (error) {\n      console.error('Error picking video:', error);\n      return null;\n    }\n  }\n  \n  // On mobile platforms, use the document picker\n  try {\n    const result = await DocumentPicker.getDocumentAsync({\n      type: 'video/*',\n      copyToCacheDirectory: true, // Copy file to app's cache for reliable access\n    });\n    \n    if (result.canceled) {\n      console.log('Document picker was canceled');\n      return null;\n    }\n    \n    // DocumentPicker now returns an array of assets, so we take the first one\n    if (result.assets && result.assets.length > 0) {\n      console.log('Selected video file:', result.assets[0].uri);\n      return result.assets[0].uri;\n    }\n    \n    return null;\n  } catch (error) {\n    console.error('Error picking document:', error);\n    return null;\n  }\n};","import React from 'react';\nimport { StyleSheet, View, Text, TouchableOpacity, Image } from 'react-native';\nimport { StatusBar } from 'expo-status-bar';\nimport { useNavigation } from '@react-navigation/native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../types/navigation';\nimport { selectVideoFromLibrary } from '../services/platform-media';\n\ntype HomeScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'Home'>;\n\nconst HomeScreen: React.FC = () => {\n  const navigation = useNavigation<HomeScreenNavigationProp>();\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"dark\" />\n      \n      <View style={styles.header}>\n        <Text style={styles.title}>LipSeek</Text>\n        <Text style={styles.subtitle}>Lip Reading App</Text>\n      </View>\n      \n      <View style={styles.content}>\n        <Image \n          source={require('../../assets/icon.png')} \n          style={styles.logo}\n          resizeMode=\"contain\"\n        />\n        \n        <Text style={styles.description}>\n          Record or upload a video of someone speaking and get a transcript of what they said.\n        </Text>\n      </View>\n      \n      <View style={styles.actions}>\n        <TouchableOpacity \n          style={[styles.button, styles.primaryButton]}\n          onPress={() => navigation.navigate('Record')}\n        >\n          <MaterialIcons name=\"videocam\" size={24} color=\"white\" />\n          <Text style={styles.buttonText}>Record Video</Text>\n        </TouchableOpacity>\n        \n        <TouchableOpacity \n          style={[styles.button, styles.secondaryButton]}\n          onPress={async () => {\n            try {\n              const uri = await selectVideoFromLibrary();\n              if (uri) {\n                navigation.navigate('Preview', { uri });\n              }\n            } catch (error) {\n              console.error('Error selecting video:', error);\n            }\n          }}\n        >\n          <MaterialIcons name=\"file-upload\" size={24} color=\"white\" />\n          <Text style={styles.buttonText}>Upload Video</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n    padding: 20,\n  },\n  header: {\n    marginTop: 40,\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    marginTop: 5,\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  logo: {\n    width: 150,\n    height: 150,\n    marginBottom: 30,\n  },\n  description: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center',\n    marginHorizontal: 20,\n    lineHeight: 24,\n  },\n  actions: {\n    marginBottom: 40,\n  },\n  button: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    borderRadius: 10,\n    marginVertical: 10,\n  },\n  primaryButton: {\n    backgroundColor: '#4285F4',\n  },\n  secondaryButton: {\n    backgroundColor: '#34A853',\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginLeft: 10,\n  },\n});\n\nexport default HomeScreen;","import React, { useState, useRef, useEffect } from 'react';\nimport { StyleSheet, View, TouchableOpacity, Text } from 'react-native';\nimport {\n  CameraView as ExpoCameraView,\n  CameraType,\n  useCameraPermissions,\n} from \"expo-camera\";\nimport { MaterialIcons } from '@expo/vector-icons';\n\ninterface CameraViewProps {\n  onVideoRecorded: (uri: string) => void;\n}\n\nconst CameraView: React.FC<CameraViewProps> = ({ onVideoRecorded }) => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [facing, setFacing] = useState<CameraType>('front');\n  const cameraRef = useRef<ExpoCameraView>(null);\n\n  // Use the hook to handle permissions.\n  const [permission, requestPermission] = useCameraPermissions();\n\n  useEffect(() => {\n    if (!permission) return; // Permission still loading\n    if (!permission.granted) {\n      requestPermission();\n    }\n  }, [permission]);\n\n  const toggleCameraFacing = () => {\n    setFacing(current => (current === 'back' ? 'front' : 'back'));\n  };\n\n  const prepareRecording = () => {\n    startRecording();\n  };\n\n  const startRecording = async () => {\n    if (cameraRef.current) {\n      setIsRecording(true);\n      try {\n        const video = await cameraRef.current?.recordAsync();\n        setIsRecording(false);\n        if (!video) {\n          setIsRecording(false);\n          console.error(\"Recording failed: video is undefined.\");\n          return;\n        }\n        onVideoRecorded(video.uri);\n      } catch (error) {\n        console.error('Error recording video:', error);\n        setIsRecording(false);\n      }\n    }\n  };\n\n  const stopRecording = async () => {\n    if (cameraRef.current && isRecording) {\n      cameraRef.current?.stopRecording();\n      setIsRecording(false);\n    }\n  };\n\n  if (!permission) {\n    return (\n      <View style={styles.container}>\n        <Text>Loading permissions...</Text>\n      </View>\n    );\n  }\n\n  if (!permission.granted) {\n    return (\n      <View style={styles.container}>\n        <Text>No access to camera</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <ExpoCameraView ref={cameraRef} style={styles.camera} facing={facing} mode=\"video\">\n        <View style={styles.controlsContainer}>\n          <View style={styles.buttonContainer}>\n            <TouchableOpacity\n              style={styles.iconButton}\n              onPress={toggleCameraFacing}\n              disabled={isRecording}\n            >\n              <MaterialIcons name=\"flip-camera-ios\" size={36} color=\"white\" />\n            </TouchableOpacity>\n            {isRecording ? (\n              <TouchableOpacity\n                style={[styles.recordButton, styles.recordingButton]}\n                onPress={stopRecording}\n              />\n            ) : (\n              <TouchableOpacity\n                style={styles.recordButton}\n                onPress={prepareRecording}\n                disabled={isRecording}\n              />\n            )}\n            <View style={styles.iconButton} />\n          </View>\n        </View>\n      </ExpoCameraView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n  },\n  camera: {\n    flex: 1,\n  },\n  controlsContainer: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    justifyContent: 'flex-end',\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    marginBottom: 30,\n  },\n  recordButton: {\n    width: 70,\n    height: 70,\n    borderRadius: 35,\n    backgroundColor: 'red',\n    borderWidth: 5,\n    borderColor: 'white',\n  },\n  recordingButton: {\n    backgroundColor: 'white',\n    borderWidth: 20,\n    borderColor: 'red',\n  },\n  iconButton: {\n    width: 50,\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default CameraView;","import React, { useState, useRef, useEffect } from 'react';\r\nimport { StyleSheet, View, TouchableOpacity, Text, Platform, AppState } from 'react-native';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { useIsFocused } from '@react-navigation/native';\r\n\r\ninterface WebCameraViewProps {\r\n  onVideoRecorded: (uri: string) => void;\r\n}\r\n\r\nconst WebCameraView: React.FC<WebCameraViewProps> = ({ onVideoRecorded }) => {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [mediaRecorder, setMediaRecorder] = useState<MediaRecorder | null>(null);\r\n  const [cameraStream, setCameraStream] = useState<MediaStream | null>(null);\r\n  const [videoURL, setVideoURL] = useState<string | null>(null);\r\n  const [isCameraAvailable, setIsCameraAvailable] = useState(true);\r\n  const [facingMode, setFacingMode] = useState('user'); // 'user' for front camera, 'environment' for back\r\n  \r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  const chunks = useRef<Blob[]>([]);\r\n  const isFocused = useIsFocused();\r\n  \r\n  // Handle app state changes (background/foreground)\r\n  useEffect(() => {\r\n    const subscription = AppState.addEventListener('change', nextAppState => {\r\n      if (nextAppState !== 'active' && cameraStream) {\r\n        // Stop camera when app goes to background\r\n        cameraStream.getTracks().forEach(track => track.stop());\r\n        setCameraStream(null);\r\n      } else if (nextAppState === 'active' && !cameraStream && isFocused) {\r\n        // Restart camera when app comes to foreground and screen is focused\r\n        setupCamera();\r\n      }\r\n    });\r\n    \r\n    // Add browser visibility change event for web\r\n    const handleVisibilityChange = () => {\r\n      if (document.hidden && cameraStream) {\r\n        // Stop camera when tab is not visible\r\n        cameraStream.getTracks().forEach(track => track.stop());\r\n        setCameraStream(null);\r\n      } else if (!document.hidden && !cameraStream && isFocused) {\r\n        // Restart camera when tab becomes visible and screen is focused\r\n        setupCamera();\r\n      }\r\n    };\r\n    \r\n    if (Platform.OS === 'web') {\r\n      document.addEventListener('visibilitychange', handleVisibilityChange);\r\n    }\r\n\r\n    return () => {\r\n      subscription.remove();\r\n      if (Platform.OS === 'web') {\r\n        document.removeEventListener('visibilitychange', handleVisibilityChange);\r\n      }\r\n    };\r\n  }, [cameraStream, isFocused]);\r\n\r\n  // Start/stop camera based on screen focus\r\n  useEffect(() => {\r\n    if (isFocused) {\r\n      setupCamera();\r\n    } else if (cameraStream) {\r\n      // Stop camera when screen loses focus\r\n      cameraStream.getTracks().forEach(track => track.stop());\r\n      setCameraStream(null);\r\n    }\r\n    \r\n    // Cleanup when component unmounts\r\n    return () => {\r\n      if (cameraStream) {\r\n        cameraStream.getTracks().forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, [isFocused, facingMode]);\r\n\r\n  const setupCamera = async () => {\r\n    try {\r\n      if (cameraStream) {\r\n        cameraStream.getTracks().forEach(track => track.stop());\r\n      }\r\n      \r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: {\r\n          facingMode: facingMode\r\n        },\r\n        audio: true\r\n      });\r\n      \r\n      setCameraStream(stream);\r\n      \r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n      }\r\n      \r\n      setIsCameraAvailable(true);\r\n    } catch (error) {\r\n      console.error('Error accessing camera:', error);\r\n      setIsCameraAvailable(false);\r\n    }\r\n  };\r\n\r\n  const toggleCameraFacing = () => {\r\n    setFacingMode(current => (current === 'environment' ? 'user' : 'environment'));\r\n  };\r\n\r\n  const prepareRecording = () => {\r\n    startRecording();\r\n  };\r\n\r\n  const startRecording = async () => {\r\n    if (!cameraStream) return;\r\n    \r\n    chunks.current = [];\r\n    setIsRecording(true);\r\n    \r\n    try {\r\n      const recorder = new MediaRecorder(cameraStream);\r\n      \r\n      recorder.ondataavailable = (event) => {\r\n        if (event.data.size > 0) {\r\n          chunks.current.push(event.data);\r\n        }\r\n      };\r\n      \r\n      recorder.onstop = () => {\r\n        const blob = new Blob(chunks.current, { type: 'video/webm' });\r\n        const url = URL.createObjectURL(blob);\r\n        setVideoURL(url);\r\n        onVideoRecorded(url);\r\n        setIsRecording(false);\r\n      };\r\n      \r\n      setMediaRecorder(recorder);\r\n      recorder.start();\r\n      \r\n      // Auto stop after 10 seconds (can be adjusted)\r\n      setTimeout(() => {\r\n        if (recorder.state === 'recording') {\r\n          stopRecording();\r\n        }\r\n      }, 10000);\r\n    } catch (error) {\r\n      console.error('Error starting recording:', error);\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorder && mediaRecorder.state === 'recording') {\r\n      mediaRecorder.stop();\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  if (!isCameraAvailable) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={{color: 'white'}}>Camera not available or permission denied</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <video \r\n        ref={videoRef} \r\n        style={styles.camera} \r\n        autoPlay \r\n        playsInline \r\n        muted \r\n      />\r\n      <View style={styles.controlsContainer}>\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            style={styles.iconButton}\r\n            onPress={toggleCameraFacing}\r\n            disabled={isRecording}\r\n          >\r\n            <MaterialIcons name=\"flip-camera-ios\" size={36} color=\"white\" />\r\n          </TouchableOpacity>\r\n          {isRecording ? (\r\n            <TouchableOpacity\r\n              style={[styles.recordButton, styles.recordingButton]}\r\n              onPress={stopRecording}\r\n            />\r\n          ) : (\r\n            <TouchableOpacity\r\n              style={styles.recordButton}\r\n              onPress={prepareRecording}\r\n              disabled={isRecording}\r\n            />\r\n          )}\r\n          <View style={styles.iconButton} />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'black',\r\n  },\r\n  camera: {\r\n    flex: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n    objectFit: 'cover',\r\n  },\r\n  controlsContainer: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    backgroundColor: 'transparent',\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n    marginBottom: 30,\r\n  },\r\n  recordButton: {\r\n    width: 70,\r\n    height: 70,\r\n    borderRadius: 35,\r\n    backgroundColor: 'red',\r\n    borderWidth: 5,\r\n    borderColor: 'white',\r\n  },\r\n  recordingButton: {\r\n    backgroundColor: 'white',\r\n    borderWidth: 20,\r\n    borderColor: 'red',\r\n  },\r\n  iconButton: {\r\n    width: 50,\r\n    height: 50,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default WebCameraView;","import React from 'react';\nimport { Platform } from 'react-native';\nimport CameraView from './CameraView';\nimport WebCameraView from './WebCameraView';\n\ninterface PlatformCameraViewProps {\n  onVideoRecorded: (uri: string) => void;\n}\n\nconst PlatformCameraView: React.FC<PlatformCameraViewProps> = (props) => {\n  if (Platform.OS === 'web') {\n    return <WebCameraView {...props} />;\n  }\n  \n  return <CameraView {...props} />;\n};\n\nexport default PlatformCameraView;","import React from 'react';\nimport { StyleSheet, View, TouchableOpacity, Text } from 'react-native';\nimport { StatusBar } from 'expo-status-bar';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport PlatformCameraView from '../components/PlatformCameraView';\nimport { RootStackParamList } from '../types/navigation';\n\ntype RecordScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'Record'>;\n\nconst RecordScreen: React.FC = () => {\n  const navigation = useNavigation<RecordScreenNavigationProp>();\n\n  const handleVideoRecorded = (uri: string) => {\n    navigation.navigate('Preview', { uri });\n   };\n  \n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"light\" />\n      \n      <PlatformCameraView onVideoRecorded={handleVideoRecorded} />\n      \n      <TouchableOpacity \n        style={styles.backButton}\n        onPress={() => navigation.goBack()}\n      >\n        <MaterialIcons name=\"arrow-back\" size={24} color=\"white\" />\n      </TouchableOpacity>\n      \n      <View style={styles.instructions}>\n        <Text style={styles.instructionText}>\n          Record a video of someone speaking clearly\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n  },\n  backButton: {\n    position: 'absolute',\n    top: 50,\n    left: 20,\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 10,\n  },\n  instructions: {\n    position: 'absolute',\n    top: 50,\n    left: 70,\n    right: 20,\n    padding: 10,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    borderRadius: 10,\n  },\n  instructionText: {\n    color: 'white',\n    textAlign: 'center',\n  },\n});\n\nexport default RecordScreen;","import React, { useState } from 'react';\nimport { StyleSheet, View, TouchableOpacity, Text } from 'react-native';\nimport { Video, ResizeMode } from 'expo-av';\nimport { MaterialIcons } from '@expo/vector-icons';\n\ninterface VideoPlayerProps {\n  uri: string;\n  onClose?: () => void;\n  style?: any;\n}\n\nconst VideoPlayer: React.FC<VideoPlayerProps> = ({ uri, onClose, style }) => {\n  const [status, setStatus] = useState({});\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  const handlePlaybackStatusUpdate = (status: any) => {\n    setStatus(status);\n    setIsPlaying(status.isPlaying);\n  };\n\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n  };\n\n  return (\n    <View style={[styles.container, style]}>\n      <Video\n        style={styles.video}\n        source={{ uri }}\n        useNativeControls={false}\n        resizeMode={ResizeMode.CONTAIN}\n        isLooping\n        shouldPlay={isPlaying}\n        onPlaybackStatusUpdate={handlePlaybackStatusUpdate}\n      />\n      \n      <View style={styles.controls}>\n        {onClose && (\n          <TouchableOpacity style={styles.closeButton} onPress={onClose}>\n            <MaterialIcons name=\"close\" size={24} color=\"white\" />\n          </TouchableOpacity>\n        )}\n        \n        <TouchableOpacity style={styles.playButton} onPress={togglePlayPause}>\n          <MaterialIcons\n            name={isPlaying ? 'pause' : 'play-arrow'}\n            size={32}\n            color=\"white\"\n          />\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n  },\n  video: {\n    flex: 1,\n    width: '100%',\n  },\n  controls: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  closeButton: {\n    position: 'absolute',\n    top: -40,\n    right: 20,\n    width: 40,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    borderRadius: 20,\n  },\n  playButton: {\n    width: 64,\n    height: 64,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    borderRadius: 32,\n    borderWidth: 2,\n    borderColor: 'white',\n  },\n});\n\nexport default VideoPlayer;","import React, { useRef, useEffect } from 'react';\nimport { StyleSheet, View } from 'react-native';\n\ninterface WebVideoPlayerProps {\n  uri: string;\n  style?: any;\n}\n\nconst WebVideoPlayer: React.FC<WebVideoPlayerProps> = ({ uri, style }) => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.src = uri;\n    }\n  }, [uri]);\n\n  return (\n    <View style={[styles.container, style]}>\n      <video \n        ref={videoRef}\n        style={styles.video}\n        controls\n        playsInline\n        autoPlay\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n    borderRadius: 10,\n  },\n  video: {\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover',\n  },\n});\n\nexport default WebVideoPlayer;","import React from 'react';\nimport { Platform } from 'react-native';\nimport VideoPlayer from './VideoPlayer';\nimport WebVideoPlayer from './WebVideoPlayer';\n\ninterface PlatformVideoPlayerProps {\n  uri: string;\n  style?: any;\n}\n\nconst PlatformVideoPlayer: React.FC<PlatformVideoPlayerProps> = (props) => {\n  if (Platform.OS === 'web') {\n    return <WebVideoPlayer {...props} />;\n  }\n  \n  return <VideoPlayer {...props} />;\n};\n\nexport default PlatformVideoPlayer;","import axios from 'axios';\nimport { Platform } from 'react-native';\n\n// Use HTTPS for web platform\nconst API_URL = Platform.OS === 'web' \n  ? 'https://api.dermetric.cashel.dev:5555'\n  : 'http://api.dermetric.cashel.dev:5555';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'multipart/form-data',\n  },\n});\n\nexport const uploadVideo = async (videoUri: string): Promise<string> => {\n  try {\n    const formData = new FormData();\n    \n    if (Platform.OS === 'web') {\n      // For web, we need to fetch the blob from the URL\n      if (videoUri.startsWith('blob:')) {\n        const response = await fetch(videoUri);\n        const blob = await response.blob();\n        const fileType = 'webm';\n        const fileName = `video-${Date.now()}.${fileType}`;\n        formData.append('file', blob, fileName);\n      } else {\n        throw new Error('Invalid video URI format for web');\n      }\n    } else {\n      // Native platform handling\n      const fileType = videoUri.split('.').pop() || 'mp4';\n      const fileName = `video-${Date.now()}.${fileType}`;\n      \n      // @ts-ignore: FormData in React Native works differently\n      formData.append('file', {\n        uri: videoUri,\n        name: fileName,\n        type: `video/${fileType}`,\n      });\n    }\n\n    const response = await api.post('/predict', formData);\n    return response.data.prediction;\n  } catch (error) {\n    console.error('Error uploading video:', error);\n    throw error;\n  }\n};\n\nexport default api;","import React, { useState } from 'react';\nimport { StyleSheet, View, Text, TouchableOpacity, ActivityIndicator, ScrollView } from 'react-native';\nimport { StatusBar } from 'expo-status-bar';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { RouteProp, useNavigation, useRoute } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport PlatformVideoPlayer from '../components/PlatformVideoPlayer';\nimport { RootStackParamList } from '../types/navigation';\nimport { uploadVideo } from '../services/api';\n\ntype PreviewScreenRouteProp = RouteProp<RootStackParamList, 'Preview'>;\ntype PreviewScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'Preview'>;\n\nconst PreviewScreen: React.FC = () => {\n  const navigation = useNavigation<PreviewScreenNavigationProp>();\n  const route = useRoute<PreviewScreenRouteProp>();\n  const { uri } = route.params;\n  \n  const [analyzing, setAnalyzing] = useState(false);\n  const [transcript, setTranscript] = useState<string | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleAnalyzeVideo = async () => {\n    setAnalyzing(true);\n    setError(null);\n    \n    try {\n      const result = await uploadVideo(uri);\n      setTranscript(result);\n    } catch (err) {\n      console.error('Error analyzing video:', err);\n      setError('Failed to analyze video. Please try again.');\n    } finally {\n      setAnalyzing(false);\n    }\n  };\n\n  const handleStartOver = () => {\n    navigation.navigate('Home');\n  };\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"light\" />\n      \n      <View style={styles.videoContainer}>\n        <PlatformVideoPlayer uri={uri} />\n      </View>\n      \n      <View style={styles.content}>\n        <TouchableOpacity \n          style={styles.backButton}\n          onPress={() => navigation.goBack()}\n        >\n          <MaterialIcons name=\"arrow-back\" size={24} color=\"#333\" />\n        </TouchableOpacity>\n        \n        {transcript ? (\n          <View style={styles.resultContainer}>\n            <Text style={styles.resultTitle}>Transcript</Text>\n            <ScrollView style={styles.transcriptContainer}>\n              <Text style={styles.transcript}>{transcript}</Text>\n            </ScrollView>\n            <TouchableOpacity \n              style={[styles.button, styles.secondaryButton]}\n              onPress={handleStartOver}\n            >\n              <MaterialIcons name=\"refresh\" size={20} color=\"white\" />\n              <Text style={styles.buttonText}>Start Over</Text>\n            </TouchableOpacity>\n          </View>\n        ) : (\n          <View style={styles.actionContainer}>\n            {analyzing ? (\n              <View style={styles.loadingContainer}>\n                <ActivityIndicator size=\"large\" color=\"#4285F4\" />\n                <Text style={styles.loadingText}>Analyzing video...</Text>\n              </View>\n            ) : (\n              <>\n                {error && <Text style={styles.errorText}>{error}</Text>}\n                <TouchableOpacity \n                  style={[styles.button, styles.primaryButton]}\n                  onPress={handleAnalyzeVideo}\n                >\n                  <MaterialIcons name=\"auto-awesome\" size={20} color=\"white\" />\n                  <Text style={styles.buttonText}>Analyze Speech</Text>\n                </TouchableOpacity>\n              </>\n            )}\n          </View>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  videoContainer: {\n    height: '50%',\n    backgroundColor: 'black',\n  },\n  content: {\n    flex: 1,\n    padding: 20,\n  },\n  backButton: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: '#eee',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  actionContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  button: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 10,\n    marginVertical: 10,\n  },\n  primaryButton: {\n    backgroundColor: '#4285F4',\n  },\n  secondaryButton: {\n    backgroundColor: '#34A853',\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginLeft: 8,\n  },\n  loadingContainer: {\n    alignItems: 'center',\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: '#666',\n  },\n  errorText: {\n    color: 'red',\n    marginBottom: 16,\n    textAlign: 'center',\n  },\n  resultContainer: {\n    flex: 1,\n  },\n  resultTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    color: '#333',\n  },\n  transcriptContainer: {\n    flex: 1,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 16,\n    marginBottom: 16,\n  },\n  transcript: {\n    fontSize: 18,\n    lineHeight: 26,\n    color: '#333',\n  },\n});\n\nexport default PreviewScreen;","import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { RootStackParamList } from './src/types/navigation';\n\n// Screens\nimport HomeScreen from './src/screens/HomeScreen';\nimport RecordScreen from './src/screens/RecordScreen';\n// Removed PickVideoScreen since we're handling upload directly from HomeScreen\nimport PreviewScreen from './src/screens/PreviewScreen';\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nexport default function App() {\n  return (\n    <PaperProvider>\n      <NavigationContainer>\n        <StatusBar style=\"auto\" />\n        <Stack.Navigator\n          initialRouteName=\"Home\"\n          screenOptions={{\n            headerShown: false,\n            animation: 'slide_from_right',\n          }}\n        >\n          <Stack.Screen name=\"Home\" component={HomeScreen} />\n          <Stack.Screen name=\"Record\" component={RecordScreen} />\n          <Stack.Screen name=\"Preview\" component={PreviewScreen} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </PaperProvider>\n  );\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// ensures that whether app is loaded in Expo Go or in a native build, the environment is set up appropriately\nregisterRootComponent(App);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/lipseek/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [974], () => (__webpack_require__(2388)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["selectVideoFromLibrary","async","Promise","resolve","reject","input","document","createElement","type","accept","onchange","event","files","target","length","url","URL","createObjectURL","Error","click","error","console","result","DocumentPicker","copyToCacheDirectory","canceled","log","assets","uri","styles","StyleSheet","create","container","flex","backgroundColor","padding","header","marginTop","alignItems","title","fontSize","fontWeight","color","subtitle","content","justifyContent","logo","width","height","marginBottom","description","textAlign","marginHorizontal","lineHeight","actions","button","flexDirection","borderRadius","marginVertical","primaryButton","secondaryButton","buttonText","marginLeft","HomeScreen","navigation","useNavigation","_jsxs","View","style","children","_jsx","StatusBar","Text","Image","source","require","resizeMode","TouchableOpacity","onPress","navigate","MaterialIcons","name","size","camera","controlsContainer","buttonContainer","recordButton","borderWidth","borderColor","recordingButton","iconButton","objectFit","position","bottom","left","right","WebCameraView","onVideoRecorded","isRecording","setIsRecording","useState","mediaRecorder","setMediaRecorder","cameraStream","setCameraStream","videoURL","setVideoURL","isCameraAvailable","setIsCameraAvailable","facingMode","setFacingMode","videoRef","useRef","chunks","isFocused","useIsFocused","useEffect","subscription","AppState","addEventListener","nextAppState","getTracks","forEach","track","stop","setupCamera","handleVisibilityChange","hidden","remove","removeEventListener","stream","navigator","mediaDevices","getUserMedia","video","audio","current","srcObject","startRecording","recorder","MediaRecorder","ondataavailable","data","push","onstop","blob","Blob","start","setTimeout","state","stopRecording","ref","autoPlay","playsInline","muted","toggleCameraFacing","disabled","prepareRecording","props","Object","assign","backButton","top","zIndex","instructions","instructionText","RecordScreen","PlatformCameraView","goBack","controls","closeButton","playButton","overflow","WebVideoPlayer","src","api","axios","baseURL","headers","videoContainer","actionContainer","paddingVertical","paddingHorizontal","loadingContainer","loadingText","errorText","resultContainer","resultTitle","transcriptContainer","transcript","PreviewScreen","route","useRoute","params","analyzing","setAnalyzing","setTranscript","setError","PlatformVideoPlayer","ScrollView","handleStartOver","ActivityIndicator","_Fragment","formData","FormData","videoUri","startsWith","response","fetch","fileType","fileName","Date","now","append","post","prediction","uploadVideo","err","Stack","createNativeStackNavigator","registerRootComponent","PaperProvider","NavigationContainer","Navigator","initialRouteName","screenOptions","headerShown","animation","Screen","component","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}